{"id":"XMDE","dependencies":[{"name":"C:\\Users\\vpariente_profile\\DEV\\mcd\\visualizacion\\visualizacionpractica2\\package.json","includedInParent":true,"mtime":1655155295911},{"name":"C:\\Users\\vpariente_profile\\DEV\\mcd\\visualizacion\\visualizacionpractica2\\node_modules\\threads\\package.json","includedInParent":true,"mtime":1655153729991},{"name":"./implementation","loc":{"line":1,"column":57,"index":57},"parent":"C:\\Users\\vpariente_profile\\DEV\\mcd\\visualizacion\\visualizacionpractica2\\node_modules\\threads\\dist-esm\\master\\index.js","resolved":"C:\\Users\\vpariente_profile\\DEV\\mcd\\visualizacion\\visualizacionpractica2\\node_modules\\threads\\dist-esm\\master\\implementation.browser.js"},{"name":"./pool","loc":{"line":2,"column":21,"index":98},"parent":"C:\\Users\\vpariente_profile\\DEV\\mcd\\visualizacion\\visualizacionpractica2\\node_modules\\threads\\dist-esm\\master\\index.js","resolved":"C:\\Users\\vpariente_profile\\DEV\\mcd\\visualizacion\\visualizacionpractica2\\node_modules\\threads\\dist-esm\\master\\pool.js"},{"name":"./spawn","loc":{"line":3,"column":22,"index":130},"parent":"C:\\Users\\vpariente_profile\\DEV\\mcd\\visualizacion\\visualizacionpractica2\\node_modules\\threads\\dist-esm\\master\\index.js","resolved":"C:\\Users\\vpariente_profile\\DEV\\mcd\\visualizacion\\visualizacionpractica2\\node_modules\\threads\\dist-esm\\master\\spawn.js"},{"name":"./thread","loc":{"line":4,"column":23,"index":164},"parent":"C:\\Users\\vpariente_profile\\DEV\\mcd\\visualizacion\\visualizacionpractica2\\node_modules\\threads\\dist-esm\\master\\index.js","resolved":"C:\\Users\\vpariente_profile\\DEV\\mcd\\visualizacion\\visualizacionpractica2\\node_modules\\threads\\dist-esm\\master\\thread.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BlobWorker = void 0;\nObject.defineProperty(exports, \"Pool\", {\n  enumerable: true,\n  get: function () {\n    return _pool.Pool;\n  }\n});\nObject.defineProperty(exports, \"Thread\", {\n  enumerable: true,\n  get: function () {\n    return _thread.Thread;\n  }\n});\nexports.Worker = void 0;\nObject.defineProperty(exports, \"isWorkerRuntime\", {\n  enumerable: true,\n  get: function () {\n    return _implementation.isWorkerRuntime;\n  }\n});\nObject.defineProperty(exports, \"spawn\", {\n  enumerable: true,\n  get: function () {\n    return _spawn.spawn;\n  }\n});\n\nvar _implementation = require(\"./implementation\");\n\nvar _pool = require(\"./pool\");\n\nvar _spawn = require(\"./spawn\");\n\nvar _thread = require(\"./thread\");\n\n/** Separate class to spawn workers from source code blobs or strings. */\nconst BlobWorker = (0, _implementation.getWorkerImplementation)().blob;\n/** Worker implementation. Either web worker or a node.js Worker class. */\n\nexports.BlobWorker = BlobWorker;\nconst Worker = (0, _implementation.getWorkerImplementation)().default;\nexports.Worker = Worker;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":33,"column":0},"source":"node_modules/threads/dist-esm/master/index.js","original":{"line":1,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/threads/dist-esm/master/index.js","original":{"line":2,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/threads/dist-esm/master/index.js","original":{"line":3,"column":0}},{"generated":{"line":39,"column":0},"source":"node_modules/threads/dist-esm/master/index.js","original":{"line":4,"column":0}},{"generated":{"line":41,"column":0},"source":"node_modules/threads/dist-esm/master/index.js","original":{"line":6,"column":0}},{"generated":{"line":42,"column":0},"source":"node_modules/threads/dist-esm/master/index.js","original":{"line":7,"column":7}},{"generated":{"line":42,"column":6},"source":"node_modules/threads/dist-esm/master/index.js","original":{"line":7,"column":13},"name":"BlobWorker"},{"generated":{"line":42,"column":16},"source":"node_modules/threads/dist-esm/master/index.js","original":{"line":7,"column":23}},{"generated":{"line":42,"column":19},"source":"node_modules/threads/dist-esm/master/index.js","original":{"line":7,"column":26}},{"generated":{"line":42,"column":23},"source":"node_modules/threads/dist-esm/master/index.js","original":{"line":7,"column":26},"name":"getWorkerImplementation"},{"generated":{"line":42,"column":62},"source":"node_modules/threads/dist-esm/master/index.js","original":{"line":7,"column":26}},{"generated":{"line":42,"column":66},"source":"node_modules/threads/dist-esm/master/index.js","original":{"line":7,"column":52},"name":"blob"},{"generated":{"line":42,"column":70},"source":"node_modules/threads/dist-esm/master/index.js","original":{"line":7,"column":7}},{"generated":{"line":43,"column":0},"source":"node_modules/threads/dist-esm/master/index.js","original":{"line":8,"column":0}},{"generated":{"line":46,"column":0},"source":"node_modules/threads/dist-esm/master/index.js","original":{"line":9,"column":7}},{"generated":{"line":46,"column":6},"source":"node_modules/threads/dist-esm/master/index.js","original":{"line":9,"column":13},"name":"Worker"},{"generated":{"line":46,"column":12},"source":"node_modules/threads/dist-esm/master/index.js","original":{"line":9,"column":19}},{"generated":{"line":46,"column":15},"source":"node_modules/threads/dist-esm/master/index.js","original":{"line":9,"column":22}},{"generated":{"line":46,"column":19},"source":"node_modules/threads/dist-esm/master/index.js","original":{"line":9,"column":22},"name":"getWorkerImplementation"},{"generated":{"line":46,"column":58},"source":"node_modules/threads/dist-esm/master/index.js","original":{"line":9,"column":22}},{"generated":{"line":46,"column":62},"source":"node_modules/threads/dist-esm/master/index.js","original":{"line":9,"column":48},"name":"default"},{"generated":{"line":46,"column":69},"source":"node_modules/threads/dist-esm/master/index.js","original":{"line":9,"column":7}}],"sources":{"node_modules/threads/dist-esm/master/index.js":"import { getWorkerImplementation, isWorkerRuntime } from \"./implementation\";\nexport { Pool } from \"./pool\";\nexport { spawn } from \"./spawn\";\nexport { Thread } from \"./thread\";\nexport { isWorkerRuntime };\n/** Separate class to spawn workers from source code blobs or strings. */\nexport const BlobWorker = getWorkerImplementation().blob;\n/** Worker implementation. Either web worker or a node.js Worker class. */\nexport const Worker = getWorkerImplementation().default;\n"},"lineCount":null}},"error":null,"hash":"bea12f0dd8a1c796f002dbc9c86c2bae","cacheData":{"env":{}}}