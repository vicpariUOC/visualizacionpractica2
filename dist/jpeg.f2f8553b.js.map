{"version":3,"sources":["node_modules/geotiff/src/compression/jpeg.js"],"names":["dctZigZag","Int32Array","dctCos1","dctSin1","dctCos3","dctSin3","dctCos6","dctSin6","dctSqrt2","dctSqrt1d2","buildHuffmanTable","codeLengths","values","k","code","length","push","children","index","p","q","i","j","pop","decodeScan","data","initialOffset","frame","components","resetInterval","spectralStart","spectralEnd","successivePrev","successive","mcusPerLine","progressive","startOffset","offset","bitsData","bitsCount","readBit","nextByte","Error","toString","decodeHuffman","tree","node","bit","receive","initialLength","n","undefined","receiveAndExtend","decodeBaseline","component","zz","t","huffmanTableDC","diff","pred","rs","huffmanTableAC","s","r","z","decodeDCFirst","decodeDCSuccessive","eobrun","decodeACFirst","e","successiveACState","successiveACNextValue","decodeACSuccessive","direction","decodeMcu","decodeFunction","mcu","row","col","mcuRow","mcuCol","blockRow","v","blockCol","h","blocks","decodeBlock","blocksPerLine","componentsLength","decodeFn","marker","mcuExpected","blocksPerColumn","mcusPerColumn","usedResetInterval","buildComponentData","lines","samplesPerLine","R","Uint8Array","quantizeAndInverse","dataOut","dataIn","qt","quantizationTable","v0","v1","v2","v3","v4","v5","v6","v7","sample","scanLine","line","JpegStreamReader","constructor","jfif","adobe","quantizationTables","huffmanTablesAC","huffmanTablesDC","resetFrames","frames","parse","readUint16","value","readDataBlock","array","subarray","prepareComponents","maxH","maxV","componentId","hasOwnProperty","Math","ceil","scanLines","blocksPerLineForMcu","blocksPerColumnForMcu","fileMarker","appData","version","major","minor","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesLength","quantizationTablesEnd","quantizationTableSpec","tableData","extended","precision","componentsOrder","componentsCount","qId","quantizationIdx","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","selectorsCount","tableSpec","successiveApproximation","processed","getResult","console","warn","cp","Object","keys","outComponents","width","height","scaleX","scaleY","out","oi","y","x","JpegDecoder","BaseDecoder","fileDirectory","reader","JPEGTables","buffer"],"mappings":"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","file":"jpeg.f2f8553b.js","sourceRoot":"..","sourcesContent":["import BaseDecoder from './basedecoder';\n\n/* -*- tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- /\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\n/*\n   Copyright 2011 notmasteryet\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n       http://www.apache.org/licenses/LICENSE-2.0\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n*/\n\n// - The JPEG specification can be found in the ITU CCITT Recommendation T.81\n//   (www.w3.org/Graphics/JPEG/itu-t81.pdf)\n// - The JFIF specification can be found in the JPEG File Interchange Format\n//   (www.w3.org/Graphics/JPEG/jfif3.pdf)\n// - The Adobe Application-Specific JPEG markers in the Supporting the DCT Filters\n//   in PostScript Level 2, Technical Note #5116\n//   (partners.adobe.com/public/developer/en/ps/sdk/5116.DCT_Filter.pdf)\n\nconst dctZigZag = new Int32Array([\n  0,\n  1, 8,\n  16, 9, 2,\n  3, 10, 17, 24,\n  32, 25, 18, 11, 4,\n  5, 12, 19, 26, 33, 40,\n  48, 41, 34, 27, 20, 13, 6,\n  7, 14, 21, 28, 35, 42, 49, 56,\n  57, 50, 43, 36, 29, 22, 15,\n  23, 30, 37, 44, 51, 58,\n  59, 52, 45, 38, 31,\n  39, 46, 53, 60,\n  61, 54, 47,\n  55, 62,\n  63,\n]);\n\nconst dctCos1 = 4017; // cos(pi/16)\nconst dctSin1 = 799; // sin(pi/16)\nconst dctCos3 = 3406; // cos(3*pi/16)\nconst dctSin3 = 2276; // sin(3*pi/16)\nconst dctCos6 = 1567; // cos(6*pi/16)\nconst dctSin6 = 3784; // sin(6*pi/16)\nconst dctSqrt2 = 5793; // sqrt(2)\nconst dctSqrt1d2 = 2896;// sqrt(2) / 2\n\nfunction buildHuffmanTable(codeLengths, values) {\n  let k = 0;\n  const code = [];\n  let length = 16;\n  while (length > 0 && !codeLengths[length - 1]) {\n    --length;\n  }\n  code.push({ children: [], index: 0 });\n\n  let p = code[0];\n  let q;\n  for (let i = 0; i < length; i++) {\n    for (let j = 0; j < codeLengths[i]; j++) {\n      p = code.pop();\n      p.children[p.index] = values[k];\n      while (p.index > 0) {\n        p = code.pop();\n      }\n      p.index++;\n      code.push(p);\n      while (code.length <= i) {\n        code.push(q = { children: [], index: 0 });\n        p.children[p.index] = q.children;\n        p = q;\n      }\n      k++;\n    }\n    if (i + 1 < length) {\n      // p here points to last code\n      code.push(q = { children: [], index: 0 });\n      p.children[p.index] = q.children;\n      p = q;\n    }\n  }\n  return code[0].children;\n}\n\nfunction decodeScan(data, initialOffset,\n  frame, components, resetInterval,\n  spectralStart, spectralEnd,\n  successivePrev, successive) {\n  const { mcusPerLine, progressive } = frame;\n\n  const startOffset = initialOffset;\n  let offset = initialOffset;\n  let bitsData = 0;\n  let bitsCount = 0;\n  function readBit() {\n    if (bitsCount > 0) {\n      bitsCount--;\n      return (bitsData >> bitsCount) & 1;\n    }\n    bitsData = data[offset++];\n    if (bitsData === 0xFF) {\n      const nextByte = data[offset++];\n      if (nextByte) {\n        throw new Error(`unexpected marker: ${((bitsData << 8) | nextByte).toString(16)}`);\n      }\n      // unstuff 0\n    }\n    bitsCount = 7;\n    return bitsData >>> 7;\n  }\n  function decodeHuffman(tree) {\n    let node = tree;\n    let bit;\n    while ((bit = readBit()) !== null) { // eslint-disable-line no-cond-assign\n      node = node[bit];\n      if (typeof node === 'number') {\n        return node;\n      }\n      if (typeof node !== 'object') {\n        throw new Error('invalid huffman sequence');\n      }\n    }\n    return null;\n  }\n  function receive(initialLength) {\n    let length = initialLength;\n    let n = 0;\n    while (length > 0) {\n      const bit = readBit();\n      if (bit === null) {\n        return undefined;\n      }\n      n = (n << 1) | bit;\n      --length;\n    }\n    return n;\n  }\n  function receiveAndExtend(length) {\n    const n = receive(length);\n    if (n >= 1 << (length - 1)) {\n      return n;\n    }\n    return n + (-1 << length) + 1;\n  }\n  function decodeBaseline(component, zz) {\n    const t = decodeHuffman(component.huffmanTableDC);\n    const diff = t === 0 ? 0 : receiveAndExtend(t);\n    component.pred += diff;\n    zz[0] = component.pred;\n    let k = 1;\n    while (k < 64) {\n      const rs = decodeHuffman(component.huffmanTableAC);\n      const s = rs & 15;\n      const r = rs >> 4;\n      if (s === 0) {\n        if (r < 15) {\n          break;\n        }\n        k += 16;\n      } else {\n        k += r;\n        const z = dctZigZag[k];\n        zz[z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n  }\n  function decodeDCFirst(component, zz) {\n    const t = decodeHuffman(component.huffmanTableDC);\n    const diff = t === 0 ? 0 : (receiveAndExtend(t) << successive);\n    component.pred += diff;\n    zz[0] = component.pred;\n  }\n  function decodeDCSuccessive(component, zz) {\n    zz[0] |= readBit() << successive;\n  }\n  let eobrun = 0;\n  function decodeACFirst(component, zz) {\n    if (eobrun > 0) {\n      eobrun--;\n      return;\n    }\n    let k = spectralStart;\n    const e = spectralEnd;\n    while (k <= e) {\n      const rs = decodeHuffman(component.huffmanTableAC);\n      const s = rs & 15;\n      const r = rs >> 4;\n      if (s === 0) {\n        if (r < 15) {\n          eobrun = receive(r) + (1 << r) - 1;\n          break;\n        }\n        k += 16;\n      } else {\n        k += r;\n        const z = dctZigZag[k];\n        zz[z] = receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n  }\n  let successiveACState = 0;\n  let successiveACNextValue;\n  function decodeACSuccessive(component, zz) {\n    let k = spectralStart;\n    const e = spectralEnd;\n    let r = 0;\n    while (k <= e) {\n      const z = dctZigZag[k];\n      const direction = zz[z] < 0 ? -1 : 1;\n      switch (successiveACState) {\n        case 0: { // initial state\n          const rs = decodeHuffman(component.huffmanTableAC);\n          const s = rs & 15;\n          r = rs >> 4;\n          if (s === 0) {\n            if (r < 15) {\n              eobrun = receive(r) + (1 << r);\n              successiveACState = 4;\n            } else {\n              r = 16;\n              successiveACState = 1;\n            }\n          } else {\n            if (s !== 1) {\n              throw new Error('invalid ACn encoding');\n            }\n            successiveACNextValue = receiveAndExtend(s);\n            successiveACState = r ? 2 : 3;\n          }\n          continue; // eslint-disable-line no-continue\n        }\n        case 1: // skipping r zero items\n        case 2:\n          if (zz[z]) {\n            zz[z] += (readBit() << successive) * direction;\n          } else {\n            r--;\n            if (r === 0) {\n              successiveACState = successiveACState === 2 ? 3 : 0;\n            }\n          }\n          break;\n        case 3: // set value for a zero item\n          if (zz[z]) {\n            zz[z] += (readBit() << successive) * direction;\n          } else {\n            zz[z] = successiveACNextValue << successive;\n            successiveACState = 0;\n          }\n          break;\n        case 4: // eob\n          if (zz[z]) {\n            zz[z] += (readBit() << successive) * direction;\n          }\n          break;\n        default:\n          break;\n      }\n      k++;\n    }\n    if (successiveACState === 4) {\n      eobrun--;\n      if (eobrun === 0) {\n        successiveACState = 0;\n      }\n    }\n  }\n  function decodeMcu(component, decodeFunction, mcu, row, col) {\n    const mcuRow = (mcu / mcusPerLine) | 0;\n    const mcuCol = mcu % mcusPerLine;\n    const blockRow = (mcuRow * component.v) + row;\n    const blockCol = (mcuCol * component.h) + col;\n    decodeFunction(component, component.blocks[blockRow][blockCol]);\n  }\n  function decodeBlock(component, decodeFunction, mcu) {\n    const blockRow = (mcu / component.blocksPerLine) | 0;\n    const blockCol = mcu % component.blocksPerLine;\n    decodeFunction(component, component.blocks[blockRow][blockCol]);\n  }\n\n  const componentsLength = components.length;\n  let component;\n  let i;\n  let j;\n  let k;\n  let n;\n  let decodeFn;\n  if (progressive) {\n    if (spectralStart === 0) {\n      decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n    } else {\n      decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n    }\n  } else {\n    decodeFn = decodeBaseline;\n  }\n\n  let mcu = 0;\n  let marker;\n  let mcuExpected;\n  if (componentsLength === 1) {\n    mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n  } else {\n    mcuExpected = mcusPerLine * frame.mcusPerColumn;\n  }\n\n  const usedResetInterval = resetInterval || mcuExpected;\n\n  while (mcu < mcuExpected) {\n    // reset interval stuff\n    for (i = 0; i < componentsLength; i++) {\n      components[i].pred = 0;\n    }\n    eobrun = 0;\n\n    if (componentsLength === 1) {\n      component = components[0];\n      for (n = 0; n < usedResetInterval; n++) {\n        decodeBlock(component, decodeFn, mcu);\n        mcu++;\n      }\n    } else {\n      for (n = 0; n < usedResetInterval; n++) {\n        for (i = 0; i < componentsLength; i++) {\n          component = components[i];\n          const { h, v } = component;\n          for (j = 0; j < v; j++) {\n            for (k = 0; k < h; k++) {\n              decodeMcu(component, decodeFn, mcu, j, k);\n            }\n          }\n        }\n        mcu++;\n\n        // If we've reached our expected MCU's, stop decoding\n        if (mcu === mcuExpected) {\n          break;\n        }\n      }\n    }\n\n    // find marker\n    bitsCount = 0;\n    marker = (data[offset] << 8) | data[offset + 1];\n    if (marker < 0xFF00) {\n      throw new Error('marker was not found');\n    }\n\n    if (marker >= 0xFFD0 && marker <= 0xFFD7) { // RSTx\n      offset += 2;\n    } else {\n      break;\n    }\n  }\n\n  return offset - startOffset;\n}\n\nfunction buildComponentData(frame, component) {\n  const lines = [];\n  const { blocksPerLine, blocksPerColumn } = component;\n  const samplesPerLine = blocksPerLine << 3;\n  const R = new Int32Array(64);\n  const r = new Uint8Array(64);\n\n  // A port of poppler's IDCT method which in turn is taken from:\n  //   Christoph Loeffler, Adriaan Ligtenberg, George S. Moschytz,\n  //   \"Practical Fast 1-D DCT Algorithms with 11 Multiplications\",\n  //   IEEE Intl. Conf. on Acoustics, Speech & Signal Processing, 1989,\n  //   988-991.\n  function quantizeAndInverse(zz, dataOut, dataIn) {\n    const qt = component.quantizationTable;\n    let v0;\n    let v1;\n    let v2;\n    let v3;\n    let v4;\n    let v5;\n    let v6;\n    let v7;\n    let t;\n    const p = dataIn;\n    let i;\n\n    // dequant\n    for (i = 0; i < 64; i++) {\n      p[i] = zz[i] * qt[i];\n    }\n\n    // inverse DCT on rows\n    for (i = 0; i < 8; ++i) {\n      const row = 8 * i;\n\n      // check for all-zero AC coefficients\n      if (p[1 + row] === 0 && p[2 + row] === 0 && p[3 + row] === 0\n        && p[4 + row] === 0 && p[5 + row] === 0 && p[6 + row] === 0\n        && p[7 + row] === 0) {\n        t = ((dctSqrt2 * p[0 + row]) + 512) >> 10;\n        p[0 + row] = t;\n        p[1 + row] = t;\n        p[2 + row] = t;\n        p[3 + row] = t;\n        p[4 + row] = t;\n        p[5 + row] = t;\n        p[6 + row] = t;\n        p[7 + row] = t;\n        continue; // eslint-disable-line no-continue\n      }\n\n      // stage 4\n      v0 = ((dctSqrt2 * p[0 + row]) + 128) >> 8;\n      v1 = ((dctSqrt2 * p[4 + row]) + 128) >> 8;\n      v2 = p[2 + row];\n      v3 = p[6 + row];\n      v4 = ((dctSqrt1d2 * (p[1 + row] - p[7 + row])) + 128) >> 8;\n      v7 = ((dctSqrt1d2 * (p[1 + row] + p[7 + row])) + 128) >> 8;\n      v5 = p[3 + row] << 4;\n      v6 = p[5 + row] << 4;\n\n      // stage 3\n      t = (v0 - v1 + 1) >> 1;\n      v0 = (v0 + v1 + 1) >> 1;\n      v1 = t;\n      t = ((v2 * dctSin6) + (v3 * dctCos6) + 128) >> 8;\n      v2 = ((v2 * dctCos6) - (v3 * dctSin6) + 128) >> 8;\n      v3 = t;\n      t = (v4 - v6 + 1) >> 1;\n      v4 = (v4 + v6 + 1) >> 1;\n      v6 = t;\n      t = (v7 + v5 + 1) >> 1;\n      v5 = (v7 - v5 + 1) >> 1;\n      v7 = t;\n\n      // stage 2\n      t = (v0 - v3 + 1) >> 1;\n      v0 = (v0 + v3 + 1) >> 1;\n      v3 = t;\n      t = (v1 - v2 + 1) >> 1;\n      v1 = (v1 + v2 + 1) >> 1;\n      v2 = t;\n      t = ((v4 * dctSin3) + (v7 * dctCos3) + 2048) >> 12;\n      v4 = ((v4 * dctCos3) - (v7 * dctSin3) + 2048) >> 12;\n      v7 = t;\n      t = ((v5 * dctSin1) + (v6 * dctCos1) + 2048) >> 12;\n      v5 = ((v5 * dctCos1) - (v6 * dctSin1) + 2048) >> 12;\n      v6 = t;\n\n      // stage 1\n      p[0 + row] = v0 + v7;\n      p[7 + row] = v0 - v7;\n      p[1 + row] = v1 + v6;\n      p[6 + row] = v1 - v6;\n      p[2 + row] = v2 + v5;\n      p[5 + row] = v2 - v5;\n      p[3 + row] = v3 + v4;\n      p[4 + row] = v3 - v4;\n    }\n\n    // inverse DCT on columns\n    for (i = 0; i < 8; ++i) {\n      const col = i;\n\n      // check for all-zero AC coefficients\n      if (p[(1 * 8) + col] === 0 && p[(2 * 8) + col] === 0 && p[(3 * 8) + col] === 0\n        && p[(4 * 8) + col] === 0 && p[(5 * 8) + col] === 0 && p[(6 * 8) + col] === 0\n        && p[(7 * 8) + col] === 0) {\n        t = ((dctSqrt2 * dataIn[i + 0]) + 8192) >> 14;\n        p[(0 * 8) + col] = t;\n        p[(1 * 8) + col] = t;\n        p[(2 * 8) + col] = t;\n        p[(3 * 8) + col] = t;\n        p[(4 * 8) + col] = t;\n        p[(5 * 8) + col] = t;\n        p[(6 * 8) + col] = t;\n        p[(7 * 8) + col] = t;\n        continue; // eslint-disable-line no-continue\n      }\n\n      // stage 4\n      v0 = ((dctSqrt2 * p[(0 * 8) + col]) + 2048) >> 12;\n      v1 = ((dctSqrt2 * p[(4 * 8) + col]) + 2048) >> 12;\n      v2 = p[(2 * 8) + col];\n      v3 = p[(6 * 8) + col];\n      v4 = ((dctSqrt1d2 * (p[(1 * 8) + col] - p[(7 * 8) + col])) + 2048) >> 12;\n      v7 = ((dctSqrt1d2 * (p[(1 * 8) + col] + p[(7 * 8) + col])) + 2048) >> 12;\n      v5 = p[(3 * 8) + col];\n      v6 = p[(5 * 8) + col];\n\n      // stage 3\n      t = (v0 - v1 + 1) >> 1;\n      v0 = (v0 + v1 + 1) >> 1;\n      v1 = t;\n      t = ((v2 * dctSin6) + (v3 * dctCos6) + 2048) >> 12;\n      v2 = ((v2 * dctCos6) - (v3 * dctSin6) + 2048) >> 12;\n      v3 = t;\n      t = (v4 - v6 + 1) >> 1;\n      v4 = (v4 + v6 + 1) >> 1;\n      v6 = t;\n      t = (v7 + v5 + 1) >> 1;\n      v5 = (v7 - v5 + 1) >> 1;\n      v7 = t;\n\n      // stage 2\n      t = (v0 - v3 + 1) >> 1;\n      v0 = (v0 + v3 + 1) >> 1;\n      v3 = t;\n      t = (v1 - v2 + 1) >> 1;\n      v1 = (v1 + v2 + 1) >> 1;\n      v2 = t;\n      t = ((v4 * dctSin3) + (v7 * dctCos3) + 2048) >> 12;\n      v4 = ((v4 * dctCos3) - (v7 * dctSin3) + 2048) >> 12;\n      v7 = t;\n      t = ((v5 * dctSin1) + (v6 * dctCos1) + 2048) >> 12;\n      v5 = ((v5 * dctCos1) - (v6 * dctSin1) + 2048) >> 12;\n      v6 = t;\n\n      // stage 1\n      p[(0 * 8) + col] = v0 + v7;\n      p[(7 * 8) + col] = v0 - v7;\n      p[(1 * 8) + col] = v1 + v6;\n      p[(6 * 8) + col] = v1 - v6;\n      p[(2 * 8) + col] = v2 + v5;\n      p[(5 * 8) + col] = v2 - v5;\n      p[(3 * 8) + col] = v3 + v4;\n      p[(4 * 8) + col] = v3 - v4;\n    }\n\n    // convert to 8-bit integers\n    for (i = 0; i < 64; ++i) {\n      const sample = 128 + ((p[i] + 8) >> 4);\n      if (sample < 0) {\n        dataOut[i] = 0;\n      } else if (sample > 0XFF) {\n        dataOut[i] = 0xFF;\n      } else {\n        dataOut[i] = sample;\n      }\n    }\n  }\n\n  for (let blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n    const scanLine = blockRow << 3;\n    for (let i = 0; i < 8; i++) {\n      lines.push(new Uint8Array(samplesPerLine));\n    }\n    for (let blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n      quantizeAndInverse(component.blocks[blockRow][blockCol], r, R);\n\n      let offset = 0;\n      const sample = blockCol << 3;\n      for (let j = 0; j < 8; j++) {\n        const line = lines[scanLine + j];\n        for (let i = 0; i < 8; i++) {\n          line[sample + i] = r[offset++];\n        }\n      }\n    }\n  }\n  return lines;\n}\n\nclass JpegStreamReader {\n  constructor() {\n    this.jfif = null;\n    this.adobe = null;\n\n    this.quantizationTables = [];\n    this.huffmanTablesAC = [];\n    this.huffmanTablesDC = [];\n    this.resetFrames();\n  }\n\n  resetFrames() {\n    this.frames = [];\n  }\n\n  parse(data) {\n    let offset = 0;\n    // const { length } = data;\n    function readUint16() {\n      const value = (data[offset] << 8) | data[offset + 1];\n      offset += 2;\n      return value;\n    }\n    function readDataBlock() {\n      const length = readUint16();\n      const array = data.subarray(offset, offset + length - 2);\n      offset += array.length;\n      return array;\n    }\n    function prepareComponents(frame) {\n      let maxH = 0;\n      let maxV = 0;\n      let component;\n      let componentId;\n      for (componentId in frame.components) {\n        if (frame.components.hasOwnProperty(componentId)) {\n          component = frame.components[componentId];\n          if (maxH < component.h) {\n            maxH = component.h;\n          }\n          if (maxV < component.v) {\n            maxV = component.v;\n          }\n        }\n      }\n      const mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / maxH);\n      const mcusPerColumn = Math.ceil(frame.scanLines / 8 / maxV);\n      for (componentId in frame.components) {\n        if (frame.components.hasOwnProperty(componentId)) {\n          component = frame.components[componentId];\n          const blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / maxH);\n          const blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / maxV);\n          const blocksPerLineForMcu = mcusPerLine * component.h;\n          const blocksPerColumnForMcu = mcusPerColumn * component.v;\n          const blocks = [];\n          for (let i = 0; i < blocksPerColumnForMcu; i++) {\n            const row = [];\n            for (let j = 0; j < blocksPerLineForMcu; j++) {\n              row.push(new Int32Array(64));\n            }\n            blocks.push(row);\n          }\n          component.blocksPerLine = blocksPerLine;\n          component.blocksPerColumn = blocksPerColumn;\n          component.blocks = blocks;\n        }\n      }\n      frame.maxH = maxH;\n      frame.maxV = maxV;\n      frame.mcusPerLine = mcusPerLine;\n      frame.mcusPerColumn = mcusPerColumn;\n    }\n\n    let fileMarker = readUint16();\n    if (fileMarker !== 0xFFD8) { // SOI (Start of Image)\n      throw new Error('SOI not found');\n    }\n\n    fileMarker = readUint16();\n    while (fileMarker !== 0xFFD9) { // EOI (End of image)\n      switch (fileMarker) {\n        case 0xFF00: break;\n        case 0xFFE0: // APP0 (Application Specific)\n        case 0xFFE1: // APP1\n        case 0xFFE2: // APP2\n        case 0xFFE3: // APP3\n        case 0xFFE4: // APP4\n        case 0xFFE5: // APP5\n        case 0xFFE6: // APP6\n        case 0xFFE7: // APP7\n        case 0xFFE8: // APP8\n        case 0xFFE9: // APP9\n        case 0xFFEA: // APP10\n        case 0xFFEB: // APP11\n        case 0xFFEC: // APP12\n        case 0xFFED: // APP13\n        case 0xFFEE: // APP14\n        case 0xFFEF: // APP15\n        case 0xFFFE: { // COM (Comment)\n          const appData = readDataBlock();\n\n          if (fileMarker === 0xFFE0) {\n            if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49\n              && appData[3] === 0x46 && appData[4] === 0) { // 'JFIF\\x00'\n              this.jfif = {\n                version: { major: appData[5], minor: appData[6] },\n                densityUnits: appData[7],\n                xDensity: (appData[8] << 8) | appData[9],\n                yDensity: (appData[10] << 8) | appData[11],\n                thumbWidth: appData[12],\n                thumbHeight: appData[13],\n                thumbData: appData.subarray(14, 14 + (3 * appData[12] * appData[13])),\n              };\n            }\n          }\n          // TODO APP1 - Exif\n          if (fileMarker === 0xFFEE) {\n            if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F\n              && appData[3] === 0x62 && appData[4] === 0x65 && appData[5] === 0) { // 'Adobe\\x00'\n              this.adobe = {\n                version: appData[6],\n                flags0: (appData[7] << 8) | appData[8],\n                flags1: (appData[9] << 8) | appData[10],\n                transformCode: appData[11],\n              };\n            }\n          }\n          break;\n        }\n\n        case 0xFFDB: { // DQT (Define Quantization Tables)\n          const quantizationTablesLength = readUint16();\n          const quantizationTablesEnd = quantizationTablesLength + offset - 2;\n          while (offset < quantizationTablesEnd) {\n            const quantizationTableSpec = data[offset++];\n            const tableData = new Int32Array(64);\n            if ((quantizationTableSpec >> 4) === 0) { // 8 bit values\n              for (let j = 0; j < 64; j++) {\n                const z = dctZigZag[j];\n                tableData[z] = data[offset++];\n              }\n            } else if ((quantizationTableSpec >> 4) === 1) { // 16 bit\n              for (let j = 0; j < 64; j++) {\n                const z = dctZigZag[j];\n                tableData[z] = readUint16();\n              }\n            } else {\n              throw new Error('DQT: invalid table spec');\n            }\n            this.quantizationTables[quantizationTableSpec & 15] = tableData;\n          }\n          break;\n        }\n\n        case 0xFFC0: // SOF0 (Start of Frame, Baseline DCT)\n        case 0xFFC1: // SOF1 (Start of Frame, Extended DCT)\n        case 0xFFC2: { // SOF2 (Start of Frame, Progressive DCT)\n          readUint16(); // skip data length\n          const frame = {\n            extended: (fileMarker === 0xFFC1),\n            progressive: (fileMarker === 0xFFC2),\n            precision: data[offset++],\n            scanLines: readUint16(),\n            samplesPerLine: readUint16(),\n            components: {},\n            componentsOrder: [],\n          };\n\n          const componentsCount = data[offset++];\n          let componentId;\n          // let maxH = 0;\n          // let maxV = 0;\n          for (let i = 0; i < componentsCount; i++) {\n            componentId = data[offset];\n            const h = data[offset + 1] >> 4;\n            const v = data[offset + 1] & 15;\n            const qId = data[offset + 2];\n            frame.componentsOrder.push(componentId);\n            frame.components[componentId] = {\n              h,\n              v,\n              quantizationIdx: qId,\n            };\n            offset += 3;\n          }\n          prepareComponents(frame);\n          this.frames.push(frame);\n          break;\n        }\n\n        case 0xFFC4: { // DHT (Define Huffman Tables)\n          const huffmanLength = readUint16();\n          for (let i = 2; i < huffmanLength;) {\n            const huffmanTableSpec = data[offset++];\n            const codeLengths = new Uint8Array(16);\n            let codeLengthSum = 0;\n            for (let j = 0; j < 16; j++, offset++) {\n              codeLengths[j] = data[offset];\n              codeLengthSum += codeLengths[j];\n            }\n            const huffmanValues = new Uint8Array(codeLengthSum);\n            for (let j = 0; j < codeLengthSum; j++, offset++) {\n              huffmanValues[j] = data[offset];\n            }\n            i += 17 + codeLengthSum;\n\n            if ((huffmanTableSpec >> 4) === 0) {\n              this.huffmanTablesDC[huffmanTableSpec & 15] = buildHuffmanTable(\n                codeLengths, huffmanValues,\n              );\n            } else {\n              this.huffmanTablesAC[huffmanTableSpec & 15] = buildHuffmanTable(\n                codeLengths, huffmanValues,\n              );\n            }\n          }\n          break;\n        }\n\n        case 0xFFDD: // DRI (Define Restart Interval)\n          readUint16(); // skip data length\n          this.resetInterval = readUint16();\n          break;\n\n        case 0xFFDA: { // SOS (Start of Scan)\n          readUint16(); // skip length\n          const selectorsCount = data[offset++];\n          const components = [];\n          const frame = this.frames[0];\n          for (let i = 0; i < selectorsCount; i++) {\n            const component = frame.components[data[offset++]];\n            const tableSpec = data[offset++];\n            component.huffmanTableDC = this.huffmanTablesDC[tableSpec >> 4];\n            component.huffmanTableAC = this.huffmanTablesAC[tableSpec & 15];\n            components.push(component);\n          }\n          const spectralStart = data[offset++];\n          const spectralEnd = data[offset++];\n          const successiveApproximation = data[offset++];\n          const processed = decodeScan(data, offset,\n            frame, components, this.resetInterval,\n            spectralStart, spectralEnd,\n            successiveApproximation >> 4, successiveApproximation & 15);\n          offset += processed;\n          break;\n        }\n\n        case 0xFFFF: // Fill bytes\n          if (data[offset] !== 0xFF) { // Avoid skipping a valid marker.\n            offset--;\n          }\n          break;\n\n        default:\n          if (data[offset - 3] === 0xFF\n            && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n            // could be incorrect encoding -- last 0xFF byte of the previous\n            // block was eaten by the encoder\n            offset -= 3;\n            break;\n          }\n          throw new Error(`unknown JPEG marker ${fileMarker.toString(16)}`);\n      }\n      fileMarker = readUint16();\n    }\n  }\n\n  getResult() {\n    const { frames } = this;\n    if (this.frames.length === 0) {\n      throw new Error('no frames were decoded');\n    } else if (this.frames.length > 1) {\n      console.warn('more than one frame is not supported');\n    }\n\n    // set each frame's components quantization table\n    for (let i = 0; i < this.frames.length; i++) {\n      const cp = this.frames[i].components;\n      for (const j of Object.keys(cp)) {\n        cp[j].quantizationTable = this.quantizationTables[cp[j].quantizationIdx];\n        delete cp[j].quantizationIdx;\n      }\n    }\n\n    const frame = frames[0];\n    const { components, componentsOrder } = frame;\n    const outComponents = [];\n    const width = frame.samplesPerLine;\n    const height = frame.scanLines;\n\n    for (let i = 0; i < componentsOrder.length; i++) {\n      const component = components[componentsOrder[i]];\n      outComponents.push({\n        lines: buildComponentData(frame, component),\n        scaleX: component.h / frame.maxH,\n        scaleY: component.v / frame.maxV,\n      });\n    }\n\n    const out = new Uint8Array(width * height * outComponents.length);\n    let oi = 0;\n    for (let y = 0; y < height; ++y) {\n      for (let x = 0; x < width; ++x) {\n        for (let i = 0; i < outComponents.length; ++i) {\n          const component = outComponents[i];\n          out[oi] = component.lines[0 | y * component.scaleY][0 | x * component.scaleX];\n          ++oi;\n        }\n      }\n    }\n    return out;\n  }\n}\n\nexport default class JpegDecoder extends BaseDecoder {\n  constructor(fileDirectory) {\n    super();\n    this.reader = new JpegStreamReader();\n    if (fileDirectory.JPEGTables) {\n      this.reader.parse(fileDirectory.JPEGTables);\n    }\n  }\n\n  decodeBlock(buffer) {\n    this.reader.resetFrames();\n    this.reader.parse(new Uint8Array(buffer));\n    return this.reader.getResult().buffer;\n  }\n}\n"]}