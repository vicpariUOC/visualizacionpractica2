{"version":3,"sources":["node_modules/geotiff/src/compression/packbits.js"],"names":["PackbitsDecoder","BaseDecoder","decodeBlock","buffer","dataView","DataView","out","i","byteLength","header","getInt8","next","getUint8","j","push","Uint8Array"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEe,MAAMA,eAAN,SAA8BC,oBAA9B,CAA0C;EACvDC,WAAW,CAACC,MAAD,EAAS;IAClB,MAAMC,QAAQ,GAAG,IAAIC,QAAJ,CAAaF,MAAb,CAAjB;IACA,MAAMG,GAAG,GAAG,EAAZ;;IAEA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,MAAM,CAACK,UAA3B,EAAuC,EAAED,CAAzC,EAA4C;MAC1C,IAAIE,MAAM,GAAGL,QAAQ,CAACM,OAAT,CAAiBH,CAAjB,CAAb;;MACA,IAAIE,MAAM,GAAG,CAAb,EAAgB;QACd,MAAME,IAAI,GAAGP,QAAQ,CAACQ,QAAT,CAAkBL,CAAC,GAAG,CAAtB,CAAb;QACAE,MAAM,GAAG,CAACA,MAAV;;QACA,KAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,MAArB,EAA6B,EAAEI,CAA/B,EAAkC;UAChCP,GAAG,CAACQ,IAAJ,CAASH,IAAT;QACD;;QACDJ,CAAC,IAAI,CAAL;MACD,CAPD,MAOO;QACL,KAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,MAArB,EAA6B,EAAEI,CAA/B,EAAkC;UAChCP,GAAG,CAACQ,IAAJ,CAASV,QAAQ,CAACQ,QAAT,CAAkBL,CAAC,GAAGM,CAAJ,GAAQ,CAA1B,CAAT;QACD;;QACDN,CAAC,IAAIE,MAAM,GAAG,CAAd;MACD;IACF;;IACD,OAAO,IAAIM,UAAJ,CAAeT,GAAf,EAAoBH,MAA3B;EACD;;AAtBsD","file":"packbits.9ba764da.js","sourceRoot":"..","sourcesContent":["import BaseDecoder from './basedecoder';\n\nexport default class PackbitsDecoder extends BaseDecoder {\n  decodeBlock(buffer) {\n    const dataView = new DataView(buffer);\n    const out = [];\n\n    for (let i = 0; i < buffer.byteLength; ++i) {\n      let header = dataView.getInt8(i);\n      if (header < 0) {\n        const next = dataView.getUint8(i + 1);\n        header = -header;\n        for (let j = 0; j <= header; ++j) {\n          out.push(next);\n        }\n        i += 1;\n      } else {\n        for (let j = 0; j <= header; ++j) {\n          out.push(dataView.getUint8(i + j + 1));\n        }\n        i += header + 1;\n      }\n    }\n    return new Uint8Array(out).buffer;\n  }\n}\n"]}